
# The INFO level provides only important information
# More detailed logs can be displayed with DEBUG
logging.level.org.soapui_mocker: INFO


# ------------------------------------------------------------------------------
#
# Project sets to be loaded (indexed from 0).
#
# There can be as many project sets as you need, each representing a root folder
# under which there can be multiple SoapUI project files to be loaded.
#

# Name of the set (optional, serves display/logging purposes only.
# Example:  My Awesome SoapUI Project
# mocker.projectSets[0].name=

# The root folder in which the SoapUI project files are in
# mocker.projectSets[0].rootFolder=

# Look for SoapUI project files in the root folder recursively so that
# subfolders are also scanned or not.
# defaults to "true"
# mocker.projectSets[0].recursive=

# The project file names that are excluded (case-sensitive).
# Example: my-awesome-but-excluded-soapui-project.xml
# mocker.projectSets[0].excludedProjectNames[0]=

# Postfix of the project file name without the extension.
# Defaults to "soapui-project". If null, all files will be considered.
# mocker.projectSets[0].projectFileNamePostfix=

# The file extensions that are considered as SoapUI project files.
# Optional, defaults to ["xml"]
# mocker.projectSets[0].projectFileExtensions[0]=

# The mock service names that are excluded (case-sensitive)
# Example: MyAuthRestService
# mocker.projectSets[0].excludedMockServiceNames[0]=

# ------------------------------------------------------------------------------

# The amount of time to wait between checking for changes (millisecs)
# Optional, defaults to 2 seconds.
# mocker.pollInterval=2000

# The amount of time to wait after a change is detected (in order to allow
# SoapUI gui to save all of the changes) (millisecs)
# Must always be smaller than pollInterval
# Optional, defaults to 1 second.
# mocker.quietPeriod=1000